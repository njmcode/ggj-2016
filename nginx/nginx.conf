user  nginx;
worker_processes  1;

error_log  /dev/stdout info;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    types {
        audio/opus                            opus;
    }
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout;

    sendfile on;
    sendfile_max_chunk 1m;
    tcp_nopush on;

    keepalive_timeout  65;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_static on;
    gzip_types text/plain text/css text/xml application/javascript application/json image/svg+xml;

    brotli on;
    brotli_types text/plain text/css text/xml application/javascript application/json image/svg+xml;
    brotli_static on;

    server {
        listen       80;
        server_name  localhost;

        location / {
            proxy_set_header  Host  $host;
            proxy_set_header  X-Forwarded-Host  $host;
            proxy_set_header  X-Forwarded-Server  $host;
            proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_pass http://backend:5000;
            proxy_http_version 1.1;

            # Needed for websockets support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off;
            client_max_body_size 10M;
        }

        location /static {
            # Have nginx serve static assets itself
            root /srv;
        }
    }
}
